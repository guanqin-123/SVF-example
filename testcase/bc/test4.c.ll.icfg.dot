digraph "ICFG" {
	label="ICFG";

	Node0x103c123e0 [shape=record,color=green,label="{NodeID: 13\nFunExitBlockNode ID: 13 Exit(\{ ln: 7 fl: ./testcase/src/test4.c \})\n \{fun: main\}}"];
	Node0x103c121c0 [shape=record,color=blue,label="{NodeID: 12\nRetBlockNode ID: 12   call void @sink(i32* %s), !dbg !21 \{fun: main\}}"];
	Node0x103c121c0 -> Node0x103c12070[style=solid];
	Node0x103c12070 [shape=record,color=black,label="{NodeID: 11\nIntraBlockNode ID: 11   ret i32 0, !dbg !22 \{fun: main\}}"];
	Node0x103c12070 -> Node0x103c123e0[style=solid];
	Node0x103c11df0 [shape=record,color=yellow,label="{NodeID: 10\nFunEntryBlockNode ID: 10 Entry()\n \{fun: sink\}}"];
	Node0x103c11d40 [shape=record,color=red,label="{NodeID: 9\nCallBlockNode ID: 9   call void @sink(i32* %s), !dbg !21 \{fun: main\}|{|<s1>0x103c086c0}}"];
	Node0x103c11d40 -> Node0x103c121c0[style=solid];
	Node0x103c11d40:s1 -> Node0x103c11df0[style=solid,color=red];
	Node0x103c11c20 [shape=record,color=black,label="{NodeID: 8\nIntraBlockNode ID: 8   store i32 %sub, i32* %s, align 4, !dbg !19 \{fun: main\}}"];
	Node0x103c11c20 -> Node0x103c11d40[style=solid];
	Node0x103c11ad0 [shape=record,color=black,label="{NodeID: 7\nIntraBlockNode ID: 7   %sub = sub nsw i32 %add, 2, !dbg !20 \{fun: main\}}"];
	Node0x103c11ad0 -> Node0x103c11c20[style=solid];
	Node0x103c11910 [shape=record,color=blue,label="{NodeID: 6\nRetBlockNode ID: 6   %call = call i32 (...) @source(), !dbg !13 \{fun: main\}}"];
	Node0x103c11910 -> Node0x103c11820[style=solid];
	Node0x103c11820 [shape=record,color=black,label="{NodeID: 5\nIntraBlockNode ID: 5   %add = add nsw i32 %call, 4, !dbg !16 \{fun: main\}}"];
	Node0x103c11820 -> Node0x103c11ad0[style=solid];
	Node0x103c11660 [shape=record,color=yellow,label="{NodeID: 4\nFunEntryBlockNode ID: 4 Entry()\n \{fun: source\}}"];
	Node0x103c115b0 [shape=record,color=red,label="{NodeID: 3\nCallBlockNode ID: 3   %call = call i32 (...) @source(), !dbg !13 \{fun: main\}|{|<s1>0x103c06f88}}"];
	Node0x103c115b0 -> Node0x103c11910[style=solid];
	Node0x103c115b0:s1 -> Node0x103c11660[style=solid,color=red];
	Node0x103c11490 [shape=record,color=black,label="{NodeID: 2\nIntraBlockNode ID: 2   %s = alloca i32, align 4 \{fun: main\}AddrPE: [7\<--8]    %s = alloca i32, align 4\{ ln: 7 fl: ./testcase/src/test4.c \}}"];
	Node0x103c11490 -> Node0x103c115b0[style=solid];
	Node0x103c05ac0 [shape=record,color=yellow,label="{NodeID: 1\nFunEntryBlockNode ID: 1 Entry(\{ in line: 4 file: ./testcase/src/test4.c \})\n \{fun: main\}}"];
	Node0x103c05ac0 -> Node0x103c05a40[style=solid];
	Node0x103c05ac0 -> Node0x103c11490[style=solid];
	Node0x103c05a40 [shape=record,color=purple,label="{NodeID: 0\nCopyPE: [2\<--3]  i8* null\{ Can only get source location for instruction, argument, global var or function. \}AddrPE: [4\<--5]  ; Function Attrs: noinline nounwind ssp uwtable\ndefine i32 @main() #0 !dbg !8 \{\nentry:\n  %s = alloca i32, align 4\n  %call = call i32 (...) @source(), !dbg !13\n  call void @llvm.dbg.value(metadata i32 %call, metadata !14, metadata !DIExpression()), !dbg !15\n  %add = add nsw i32 %call, 4, !dbg !16\n  call void @llvm.dbg.value(metadata i32 %add, metadata !17, metadata !DIExpression()), !dbg !15\n  call void @llvm.dbg.declare(metadata i32* %s, metadata !18, metadata !DIExpression()), !dbg !19\n  %sub = sub nsw i32 %add, 2, !dbg !20\n  store i32 %sub, i32* %s, align 4, !dbg !19\n  call void @sink(i32* %s), !dbg !21\n  ret i32 0, !dbg !22\n\}\n\{ in line: 4 file: ./testcase/src/test4.c \}AddrPE: [25\<--26]  ; Function Attrs: nounwind readnone speculatable willreturn\ndeclare void @llvm.dbg.declare(metadata, metadata, metadata) #1\n\{  \}AddrPE: [10\<--11]  declare i32 @source(...) #2\n\{  \}AddrPE: [21\<--22]  declare void @sink(i32*) #2\n\{  \}AddrPE: [35\<--36]  ; Function Attrs: nounwind readnone speculatable willreturn\ndeclare void @llvm.dbg.value(metadata, metadata, metadata) #1\n\{  \}}"];
}
