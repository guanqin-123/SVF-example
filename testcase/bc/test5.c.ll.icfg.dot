digraph "ICFG" {
	label="ICFG";

	Node0x103b12070 [shape=record,color=green,label="{NodeID: 13\nFunExitBlockNode ID: 13 Exit(\{ ln: 6 fl: ./testcase/src/test5.c \})\n \{fun: main\}}"];
	Node0x103b11e50 [shape=record,color=blue,label="{NodeID: 12\nRetBlockNode ID: 12   call void @sink(i32* %a), !dbg !20 \{fun: main\}}"];
	Node0x103b11e50 -> Node0x103b11d00[style=solid];
	Node0x103b11d00 [shape=record,color=black,label="{NodeID: 11\nIntraBlockNode ID: 11   ret i32 0, !dbg !21 \{fun: main\}}"];
	Node0x103b11d00 -> Node0x103b12070[style=solid];
	Node0x103b11a80 [shape=record,color=yellow,label="{NodeID: 10\nFunEntryBlockNode ID: 10 Entry()\n \{fun: sink\}}"];
	Node0x103b119d0 [shape=record,color=red,label="{NodeID: 9\nCallBlockNode ID: 9   call void @sink(i32* %a), !dbg !20 \{fun: main\}|{|<s1>0x103b083a0}}"];
	Node0x103b119d0 -> Node0x103b11e50[style=solid];
	Node0x103b119d0:s1 -> Node0x103b11a80[style=solid,color=red];
	Node0x103b118b0 [shape=record,color=black,label="{NodeID: 8\nIntraBlockNode ID: 8   store i32 %add, i32* %a, align 4, !dbg !19 \{fun: main\}}"];
	Node0x103b118b0 -> Node0x103b119d0[style=solid];
	Node0x103b11760 [shape=record,color=black,label="{NodeID: 7\nIntraBlockNode ID: 7   %add = add nsw i32 %call, 5, !dbg !18 \{fun: main\}}"];
	Node0x103b11760 -> Node0x103b118b0[style=solid];
	Node0x103b115a0 [shape=record,color=blue,label="{NodeID: 6\nRetBlockNode ID: 6   %call = call i32 (...) @source(), !dbg !13 \{fun: main\}}"];
	Node0x103b115a0 -> Node0x103b114b0[style=solid];
	Node0x103b114b0 [shape=record,color=black,label="{NodeID: 5\nIntraBlockNode ID: 5   store i32 %call, i32* %a, align 4, !dbg !17 \{fun: main\}}"];
	Node0x103b114b0 -> Node0x103b11760[style=solid];
	Node0x103b112f0 [shape=record,color=yellow,label="{NodeID: 4\nFunEntryBlockNode ID: 4 Entry()\n \{fun: source\}}"];
	Node0x103b11240 [shape=record,color=red,label="{NodeID: 3\nCallBlockNode ID: 3   %call = call i32 (...) @source(), !dbg !13 \{fun: main\}|{|<s1>0x103b06f88}}"];
	Node0x103b11240 -> Node0x103b115a0[style=solid];
	Node0x103b11240:s1 -> Node0x103b112f0[style=solid,color=red];
	Node0x103b11120 [shape=record,color=black,label="{NodeID: 2\nIntraBlockNode ID: 2   %a = alloca i32, align 4 \{fun: main\}AddrPE: [7\<--8]    %a = alloca i32, align 4\{ ln: 6 fl: ./testcase/src/test5.c \}}"];
	Node0x103b11120 -> Node0x103b11240[style=solid];
	Node0x103b05ac0 [shape=record,color=yellow,label="{NodeID: 1\nFunEntryBlockNode ID: 1 Entry(\{ in line: 4 file: ./testcase/src/test5.c \})\n \{fun: main\}}"];
	Node0x103b05ac0 -> Node0x103b05a40[style=solid];
	Node0x103b05ac0 -> Node0x103b11120[style=solid];
	Node0x103b05a40 [shape=record,color=purple,label="{NodeID: 0\nCopyPE: [2\<--3]  i8* null\{ Can only get source location for instruction, argument, global var or function. \}AddrPE: [4\<--5]  ; Function Attrs: noinline nounwind ssp uwtable\ndefine i32 @main() #0 !dbg !8 \{\nentry:\n  %a = alloca i32, align 4\n  %call = call i32 (...) @source(), !dbg !13\n  call void @llvm.dbg.value(metadata i32 %call, metadata !14, metadata !DIExpression()), !dbg !15\n  call void @llvm.dbg.declare(metadata i32* %a, metadata !16, metadata !DIExpression()), !dbg !17\n  store i32 %call, i32* %a, align 4, !dbg !17\n  %add = add nsw i32 %call, 5, !dbg !18\n  store i32 %add, i32* %a, align 4, !dbg !19\n  call void @sink(i32* %a), !dbg !20\n  ret i32 0, !dbg !21\n\}\n\{ in line: 4 file: ./testcase/src/test5.c \}AddrPE: [23\<--24]  ; Function Attrs: nounwind readnone speculatable willreturn\ndeclare void @llvm.dbg.declare(metadata, metadata, metadata) #1\n\{  \}AddrPE: [10\<--11]  declare i32 @source(...) #2\n\{  \}AddrPE: [19\<--20]  declare void @sink(i32*) #2\n\{  \}AddrPE: [33\<--34]  ; Function Attrs: nounwind readnone speculatable willreturn\ndeclare void @llvm.dbg.value(metadata, metadata, metadata) #1\n\{  \}}"];
}
