digraph "ICFG" {
	label="ICFG";

	Node0x10330b2f0 [shape=record,color=green,label="{NodeID: 17\nFunExitBlockNode ID: 17 Exit(\{ ln: 12  cl: 9  fl: ./testcase/src/test2.c \})\n \{fun: main\}}"];
	Node0x10330b170 [shape=record,color=black,label="{NodeID: 16\nIntraBlockNode ID: 16   br label %if.end, !dbg !23 \{fun: main\}}"];
	Node0x10330b170 -> Node0x103307fb0[style=solid];
	Node0x1033086e0 [shape=record,color=blue,label="{NodeID: 15\nRetBlockNode ID: 15   call void @sink(i32* %num), !dbg !24 \{fun: main\}}"];
	Node0x1033086e0 -> Node0x103308610[style=solid];
	Node0x103308610 [shape=record,color=black,label="{NodeID: 14\nIntraBlockNode ID: 14   ret i32 0, !dbg !25 \{fun: main\}}"];
	Node0x103308610 -> Node0x10330b2f0[style=solid];
	Node0x103308370 [shape=record,color=black,label="{NodeID: 13\nIntraBlockNode ID: 13   store i32 %call, i32* %num, align 4, !dbg !22 \{fun: main\}}"];
	Node0x103308370 -> Node0x10330b170[style=solid];
	Node0x103308160 [shape=record,color=yellow,label="{NodeID: 12\nFunEntryBlockNode ID: 12 Entry()\n \{fun: sink\}}"];
	Node0x103307fb0 [shape=record,color=red,label="{NodeID: 11\nCallBlockNode ID: 11   call void @sink(i32* %num), !dbg !24 \{fun: main\}|{|<s1>0x103307820}}"];
	Node0x103307fb0 -> Node0x1033086e0[style=solid];
	Node0x103307fb0:s1 -> Node0x103308160[style=solid,color=red];
	Node0x103307d90 [shape=record,color=blue,label="{NodeID: 10\nRetBlockNode ID: 10   %call = call i32 @source(), !dbg !20 \{fun: main\}}"];
	Node0x103307d90 -> Node0x103308370[style=solid];
	Node0x103305350 [shape=record,color=red,label="{NodeID: 9\nCallBlockNode ID: 9   %call = call i32 @source(), !dbg !20 \{fun: main\}|{|<s1>0x1033072d8}}"];
	Node0x103305350 -> Node0x103307d90[style=solid];
	Node0x103305350:s1 -> Node0x1033047f0[style=solid,color=red];
	Node0x1033051d0 [shape=record,color=black,label="{NodeID: 8\nIntraBlockNode ID: 8   br i1 %cmp, label %if.then, label %if.end, !dbg !19 \{fun: main\}}"];
	Node0x1033051d0 -> Node0x103305350[style=solid];
	Node0x1033051d0 -> Node0x103307fb0[style=solid];
	Node0x103305020 [shape=record,color=black,label="{NodeID: 7\nIntraBlockNode ID: 7   %cmp = icmp sle i32 0, 1, !dbg !17 \{fun: main\}}"];
	Node0x103305020 -> Node0x1033051d0[style=solid];
	Node0x103304e70 [shape=record,color=black,label="{NodeID: 6\nIntraBlockNode ID: 6   store i32 0, i32* %num, align 4, !dbg !16 \{fun: main\}}"];
	Node0x103304e70 -> Node0x103305020[style=solid];
	Node0x103304cc0 [shape=record,color=black,label="{NodeID: 5\nIntraBlockNode ID: 5   %num = alloca i32, align 4 \{fun: main\}AddrPE: [47\<--48]    %num = alloca i32, align 4\{ ln: 8 fl: ./testcase/src/test2.c \}}"];
	Node0x103304cc0 -> Node0x103304e70[style=solid];
	Node0x103304be0 [shape=record,color=yellow,label="{NodeID: 4\nFunEntryBlockNode ID: 4 Entry(\{ in line: 6 file: ./testcase/src/test2.c \})\n \{fun: main\}}"];
	Node0x103304be0 -> Node0x10330a700[style=solid];
	Node0x103304be0 -> Node0x103304cc0[style=solid];
	Node0x103304a80 [shape=record,color=green,label="{NodeID: 3\nFunExitBlockNode ID: 3 Exit(\{ ln: 4  cl: 5  fl: ./testcase/src/test2.c \})\n \{fun: source\}|{<s0>0x1033072d8}}"];
	Node0x103304a80:s0 -> Node0x103307d90[style=solid,color=blue];
	Node0x1033048d0 [shape=record,color=black,label="{NodeID: 2\nIntraBlockNode ID: 2   ret i32 1, !dbg !13 \{fun: source\}}"];
	Node0x1033048d0 -> Node0x103304a80[style=solid];
	Node0x1033047f0 [shape=record,color=yellow,label="{NodeID: 1\nFunEntryBlockNode ID: 1 Entry(\{ in line: 3 file: ./testcase/src/test2.c \})\n \{fun: source\}}"];
	Node0x1033047f0 -> Node0x1033048d0[style=solid];
	Node0x10330a700 [shape=record,color=purple,label="{NodeID: 0\nCopyPE: [2\<--3]  i8* null\{ Can only get source location for instruction, argument, global var or function. \}AddrPE: [39\<--40]  ; Function Attrs: noinline nounwind ssp uwtable\ndefine i32 @source() #0 !dbg !8 \{\nentry:\n  ret i32 1, !dbg !13\n\}\n\{ in line: 3 file: ./testcase/src/test2.c \}AddrPE: [44\<--45]  ; Function Attrs: noinline nounwind ssp uwtable\ndefine i32 @main() #0 !dbg !14 \{\nentry:\n  %num = alloca i32, align 4\n  call void @llvm.dbg.value(metadata i32 0, metadata !15, metadata !DIExpression()), !dbg !16\n  call void @llvm.dbg.declare(metadata i32* %num, metadata !17, metadata !DIExpression()), !dbg !18\n  store i32 0, i32* %num, align 4, !dbg !18\n  %cmp = icmp sle i32 0, 1, !dbg !19\n  br i1 %cmp, label %if.then, label %if.end, !dbg !21\n\nif.then:                                          ; preds = %entry\n  %call = call i32 @source(), !dbg !22\n  store i32 %call, i32* %num, align 4, !dbg !24\n  br label %if.end, !dbg !25\n\nif.end:                                           ; preds = %if.then, %entry\n  call void @sink(i32* %num), !dbg !26\n  ret i32 0, !dbg !27\n\}\n\{ in line: 6 file: ./testcase/src/test2.c \}AddrPE: [63\<--64]  ; Function Attrs: nounwind readnone speculatable willreturn\ndeclare void @llvm.dbg.declare(metadata, metadata, metadata) #1\n\{  \}AddrPE: [60\<--61]  declare void @sink(i32*) #2\n\{  \}AddrPE: [71\<--72]  ; Function Attrs: nounwind readnone speculatable willreturn\ndeclare void @llvm.dbg.value(metadata, metadata, metadata) #1\n\{  \}}"];
}
